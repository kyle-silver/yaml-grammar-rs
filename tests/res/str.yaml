# fields that are required and have no value constraints can be set inline
name: string
# detailed fields need to have everything specified
# by providing a default value, you make a field optional
str_with_default:
  type: string
  default: hello world
# strings can match against a regular expression
pattern_match:
  type: string
  regex: "^\\d{3}-\\d{3}-\\d{4}"
# primitive values can also be matched against a list
primary_color:
  type: string
  allowed: [red, yellow, blue]
# you can also forbid values
username:
  type: string
  disallowed: [admin, root]
# you can also require that if a field is present, it match a specific value
language_named_rust:
  type: string
  eq: rust
# ... or not equal
language_not_named_rust:
  type: string
  neq: rust
# you can also pass a reference to another field 
# by using a list instead of a literal
password:
  type: string
  neq: [username]
numfield: number
